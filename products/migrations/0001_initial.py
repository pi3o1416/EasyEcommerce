# Generated by Django 4.1.7 on 2023-04-02 15:23

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Product Name')),
                ('slug', models.SlugField(max_length=500, verbose_name='Product Slug')),
                ('short_discription', models.TextField(verbose_name='Product Short Description')),
                ('description', models.TextField(verbose_name='Product Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Product Price')),
                ('in_stock', models.BooleanField(default=False, verbose_name='Product In Stock')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=200, unique=True, validators=[django.core.validators.RegexValidator(message='First Letter should be in capital followed by small case letter', regex='^[A-Z]{1}[a-z]*$')], verbose_name='Category Name')),
            ],
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Color name should be in capital letter', regex='^[A-Z]+$')], verbose_name='Color Name')),
                ('color_code', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator(message='Inavlid Color Code', regex='^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$')], verbose_name='Color Code')),
            ],
        ),
        migrations.CreateModel(
            name='ProductDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_percent', models.IntegerField(verbose_name='Discount Percentage')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=200, unique=True, validators=[django.core.validators.RegexValidator(message='First letter should be in capital followed by small case latter', regex='^[A-Z]{1}[a-z]*$')], verbose_name='Tag Name')),
            ],
        ),
        migrations.AddConstraint(
            model_name='productdiscount',
            constraint=models.CheckConstraint(check=models.Q(('discount_percent__gte', 1), ('discount_percent__lte', 99)), name='valid_discount_range'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_category',
            field=models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='catagorized_products', to='products.productcategory', verbose_name='Product Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_colors',
            field=models.ManyToManyField(related_name='colored_products', to='products.productcolor', verbose_name='Product Colors'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_discount',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='discount_products', to='products.productdiscount', verbose_name='Product Discount'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_tag',
            field=models.ManyToManyField(related_name='tagged_products', to='products.producttag', verbose_name='Product Tag'),
        ),
    ]
